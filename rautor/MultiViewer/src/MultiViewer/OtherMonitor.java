/*
 * OtherMonitor.java
 *
 * Created on 19 Νοε 2009, 2:52:20 μμ
 * Copyright (c) 2009, Angelos Karageorgiou All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
  *   Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
  *   Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
  *   Neither the name of the Copyright holder nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.
  *   All advertising materials mentioning features or use of this software
      must display the following acknowledgement:
      This product includes software developed by Angelos Karageorgiou

THIS SOFTWARE IS PROVIDED BY Angelos Karageorgiou ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Angelos Karageorgiou BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 */

package MultiViewer;

import javax.swing.ImageIcon;
import java.awt.Image;
import java.awt.event.ItemEvent;

/**
 *
 * @author akarageorgiou
 */
public class OtherMonitor extends javax.swing.JFrame {
    ImageIcon myImageIcon=null;
    Image   myImage=null;    
    boolean myFitImages=true,oldFitImages=true;
   

    /** Creates new form OtherMonitor */
    public OtherMonitor() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    }

    public void setImage(ImageIcon imageIcon){
        myImageIcon=imageIcon;
        myImage=imageIcon.getImage();
    }

    public void setImage(Image image){
        myImageIcon=new ImageIcon(image);
        myImage=image;
    }

    public void ShowImage(){
        if ( myFitImages == false ) {
            jLabel1.setIcon(myImageIcon) ;
            return;
        }         
        Image image=Viewer.doScale(myImage, jScrollPane1);
        if (image != null) {
            jLabel1.setIcon(new ImageIcon(image));
        }
      }

      
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        DisplayjMenu = new javax.swing.JMenu();
        ZoomjCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(MultiViewer.MultiViewerApp.class).getContext().getResourceMap(OtherMonitor.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                OthrMonitorLabelResized(evt);
            }
        });
        jScrollPane1.setViewportView(jLabel1);

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        DisplayjMenu.setText(resourceMap.getString("DisplayjMenu.text")); // NOI18N
        DisplayjMenu.setName("DisplayjMenu"); // NOI18N

        ZoomjCheckBoxMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        ZoomjCheckBoxMenuItem.setSelected(true);
        ZoomjCheckBoxMenuItem.setText(resourceMap.getString("ZoomjCheckBoxMenuItem.text")); // NOI18N
        ZoomjCheckBoxMenuItem.setName("ZoomjCheckBoxMenuItem"); // NOI18N
        ZoomjCheckBoxMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ZoomjCheckBoxMenuItemItemStateChanged(evt);
            }
        });
        DisplayjMenu.add(ZoomjCheckBoxMenuItem);

        jMenuBar1.add(DisplayjMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OthrMonitorLabelResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_OthrMonitorLabelResized
        // TODO add your handling code here:
        ShowImage();
    }//GEN-LAST:event_OthrMonitorLabelResized

    private void ZoomjCheckBoxMenuItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ZoomjCheckBoxMenuItemItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED ){
            myFitImages=true;
        } else {
            myFitImages=false;
        }
        ShowImage();
    }//GEN-LAST:event_ZoomjCheckBoxMenuItemItemStateChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OtherMonitor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu DisplayjMenu;
    private javax.swing.JCheckBoxMenuItem ZoomjCheckBoxMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
